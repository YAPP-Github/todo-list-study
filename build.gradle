plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'jacoco'
}

group = 'site.yapp.study'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.projectlombok:lombok:1.18.26'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// Spring Boot 설정
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// Database 설정
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	// Lombok 설정
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	// test 설정
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.mysql:mysql-connector-j'
	// Swagger 설정
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
}

jacoco {
	toolVersion = '0.8.7'
}

jacocoTestReport {
	reports {
		html.required.set(true)
		xml.required.set(false)
		csv.required.set(false)

		html.destination file("jacoco/jacocoHtml")
		xml.destination file("jacoco/jacoco.xml")
	}
}

jacocoTestCoverageVerification {

	violationRules {
		rule {
			// 룰을 체크할 단위
			element = 'CLASS'

			// 브랜치 커버리지 최소 90% 민족
			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.90
			}
		}
	}
}

test {
	useJUnitPlatform()
}
